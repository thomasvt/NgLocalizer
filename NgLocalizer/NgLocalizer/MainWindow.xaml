<Window x:Class="NgLocalizer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels1="clr-namespace:NgLocalizer.ViewModels"
        xmlns:ngLocalizer="clr-namespace:NgLocalizer"
        xmlns:codePreviewing="clr-namespace:NgLocalizer.CodePreviewing"
        xmlns:wpf="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf"
        Loaded="MainWindow_OnLoaded"
        mc:Ignorable="d" x:Name="root" Closed="MainWindow_OnClosed" Activated="MainWindow_OnActivated"
        Title="NgLocalizer" Height="800" Width="1400">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <ngLocalizer:KeyColorConverter x:Key="KeyColorConverter" />
        <ngLocalizer:DefaultKeyFontWeightConverter x:Key="DefaultKeyFontWeightConverter" />
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
        <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>

        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="TreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="19" Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="false">
                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="Bd" Value="#44bbddff"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="true">
                    <Setter Property="Background" TargetName="Bd" Value="#bbddff"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.ColumnSpan="3">
            <MenuItem Header="Config">
                <MenuItem Header="set 'src\app' folder (your sources)" Click="SetAppFolder_Click" ToolTip="{Binding SourceFolder, ElementName=root}" />
                <MenuItem Header="set 'i18n' folder (translation files)" Click="MenuItem_Click" ToolTip="{Binding I18NFolder, ElementName=root}" />
            </MenuItem>
            <MenuItem Header="Code snippets">
                <MenuItem Header="HTML new Key" ToolTip="Copy this snippet to clipboard to use it in your angular sources" Click="CopyNewKeyHtmlCode " />
                <MenuItem Header="Typescript new Key" ToolTip="Copy this snippet to clipboard to use it in your angular sources" Click="CopyNewKeyTsCode" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="Some tips" Click="HelpMenuItem_OnClick"></MenuItem>
                <MenuItem Header="About" Click="MenuItem_OnClick"></MenuItem>
            </MenuItem>
        </Menu>

        <DockPanel Grid.Row="2" Grid.Column="0"   >
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top"  Background="DarkGray">
                <TextBlock Text="Search" VerticalAlignment="Center" Margin="8"></TextBlock>
                <TextBox Width="200" Margin="4" Text="{Binding SearchText, ElementName=root}"></TextBox>
                <Button Content="Next" Padding="8,4" VerticalAlignment="Center" Click="SearchNext"></Button>
            </StackPanel>
            <TreeView x:Name="TreeView" BorderThickness="0" Margin="8" ContextMenuOpening="FrameworkElement_OnContextMenuOpening" ItemsSource="{Binding ElementName=root, Path=RootItems}"  SelectedItemChanged="TreeView_OnSelectedItemChanged">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Template" Value="{StaticResource TreeViewItemTemplate}"></Setter>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
                        <EventSetter Event="MouseRightButtonDown" Handler="EventSetter_OnHandler"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type viewModels1:TreeItem}" ItemsSource="{Binding Children}">
                        <Grid ToolTip="{Binding Key}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="12" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Source="folder.png" Margin="0,0,4,0" Visibility="{Binding IsFolder, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBlock Grid.Column="1" Margin="0,0,6,0" FontWeight="UltraBlack" Foreground="SlateBlue" FontSize="14" Visibility="{Binding IsTextItem, Converter={StaticResource BooleanToVisibilityConverter}}">
                            ¶
                            </TextBlock>
                            <TextBlock Grid.Column="2" Text="{Binding Label}" FontWeight="{Binding IsDefaultKey, Converter={StaticResource DefaultKeyFontWeightConverter}}" Foreground="{Binding IsValid, Converter={StaticResource KeyColorConverter}}" />
                            <Image Grid.Column="3" Source="new.png" Margin="0,0,4,0" Visibility="{Binding IsNew, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBlock Grid.Column="4" Text="{Binding TextCount}" Visibility="{Binding HasChildren, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="Gray" Margin="16,0,0,0" ToolTip="Translatable item count." />
                            <TextBlock Grid.Column="5" Text="{Binding MissingTranslationsCountLabel}" Visibility="{Binding HasMissingTranslations, Converter={StaticResource BooleanToVisibilityConverter}}" FontWeight="Bold" Margin="16,0,0,0" ToolTip="Missing translations count." Foreground="#BC0006" />
                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.ContextMenu>
                    <ContextMenu >
                        <MenuItem x:Name="RenameKeyMenuItem" Header="Rename Key" Click="RenameKey_Click" />
                        <MenuItem x:Name="CopyKeyMenuItem" Header="Copy Key to clipboard" Click="CopyKeyButton_Click" />
                        <Separator />
                        <MenuItem Header="Reveal in vscode..." Click="OpenSourceFile_Click"></MenuItem>
                        <MenuItem Header="Open in default editor..." Click="OpenSourceFileInDefaultEditor_Click"></MenuItem>
                    </ContextMenu>
                </TreeView.ContextMenu>
            </TreeView>
        </DockPanel>

        <GridSplitter Grid.Column="1" Grid.Row="2" Background="Gray" Grid.RowSpan="2" Width="8" HorizontalAlignment="Stretch" />

        <ContentControl Grid.Column="2" Grid.Row="2" x:Name="DetailPanel">
            <ContentControl.ContentTemplate>
                <DataTemplate DataType="{x:Type viewModels1:TreeItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="42" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition  />
                            <RowDefinition Height="8" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="{Binding Key}" FontWeight="Bold" Padding="8" FontSize="16" Background="DarkGray" />
                        <ContentControl Grid.Row="1" Visibility="{Binding IsValid, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ItemsControl ItemsSource="{Binding Languages, RelativeSource={RelativeSource AncestorType=ngLocalizer:MainWindow}}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <RadioButton GroupName="Language" Margin="4,4"  Content="{Binding Name}" IsChecked="{Binding IsSelected}" Click="LanguageRadioButton_Click" ></RadioButton>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ContentControl>
                        <TextBox Grid.Row="2" AcceptsReturn="True" TextChanged="TextChanged" Text="{Binding SelectedTranslation.Text, RelativeSource={RelativeSource AncestorType=ngLocalizer:MainWindow}}"></TextBox>
                        <GridSplitter Grid.Row="3" Background="Gray" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        <TabControl Grid.Row="4" >
                            <TabItem Header="Find usages">
                                <codePreviewing:CodePreview DataContext="{Binding .}" />
                            </TabItem>
                            <TabItem Header="Markdown view">
                                <wpf:MarkdownViewer Markdown="{Binding SelectedTranslationUpdatedPerTextChange, RelativeSource={RelativeSource AncestorType=ngLocalizer:MainWindow}}"></wpf:MarkdownViewer>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </DataTemplate>
            </ContentControl.ContentTemplate>
        </ContentControl>

        <DockPanel DockPanel.Dock="Bottom" Background="Gray" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="3">
            <Button ToolTip="Scan sources" Click="ScanSources_Click" Padding="4">
                <Path Data="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z" Width="16" Height="16" Fill="Black" Stretch="Uniform"></Path>
            </Button>
            <Grid x:Name="SourceScanner" >
                <ProgressBar x:Name="ProgressBar" Background="Transparent" Margin="4,0,0,0" />
                <TextBlock Text="Scanning sources..." VerticalAlignment="Center" Margin="8,4"></TextBlock>
            </Grid>
        </DockPanel>

    </Grid>
</Window>
